---
description: 
globs: 
alwaysApply: true
---
# Design System Documentation

## üé® Spacing System

### Overview
Our centralized spacing system provides consistent spacing values across the entire application, based on MUI's 8px base unit with semantic naming for better developer experience.

### Quick Start

```typescript
import { spacing, componentSpacing, responsiveSpacing } from '../design_system';

// Use semantic spacing for components
<Box sx={{ 
  gap: componentSpacing.form.fieldGap,        // 24px for form fields
  p: componentSpacing.card.padding,           // 24px for cards
  mb: componentSpacing.layout.sectionGap      // 48px for sections
}}>
```

### Core Spacing Scale

| Name  | Value | Pixels | Usage |
|-------|-------|---------|-------|
| `xxs` | 0.25  | 2px    | Icon gaps, minimal padding |
| `xs`  | 0.5   | 4px    | Small element spacing |
| `sm`  | 1     | 8px    | Compact spacing |
| `md`  | 1.5   | 12px   | Default small spacing |
| `lg`  | 2     | 16px   | Default medium spacing |
| `xl`  | 3     | 24px   | Default large spacing |
| `2xl` | 4     | 32px   | Section spacing |
| `3xl` | 6     | 48px   | Large section spacing |
| `4xl` | 8     | 64px   | Hero spacing |

### Component-Specific Spacing

#### Forms
```typescript
componentSpacing.form.fieldGap      // 24px - Gap between form fields
componentSpacing.form.sectionGap    // 32px - Gap between form sections
componentSpacing.form.labelMargin   // 12px - Label to input spacing
```

#### Buttons
```typescript
componentSpacing.button.iconGap           // 8px - Icon to text spacing
componentSpacing.button.groupGap          // 12px - Gap between buttons
componentSpacing.button.paddingMedium     // 16px - Button padding
```

#### Cards & Containers
```typescript
componentSpacing.card.padding         // 24px - Default card padding
componentSpacing.card.paddingCompact  // 16px - Compact card padding
componentSpacing.card.gap            // 16px - Gap between card elements
```

### Responsive Spacing

```typescript
// Automatic responsive container padding
<Box sx={{ 
  padding: responsiveSpacing.containerPadding  // 16px mobile ‚Üí 48px desktop
}}>

// Custom responsive spacing
<Box sx={{ 
  gap: { 
    xs: spacing.lg,     // 16px on mobile
    md: spacing.xl      // 24px on desktop
  }
}}>
```

### Migration Examples

#### Before (Inconsistent)
```typescript
// ‚ùå Hard-coded, inconsistent values
<Box sx={{ mb: 4, gap: 3, p: 2 }}>
<Button sx={{ mr: 1 }}>
<Card sx={{ padding: '24px' }}>
```

#### After (Semantic & Consistent)
```typescript
// ‚úÖ Semantic, maintainable spacing
<Box sx={{ 
  mb: componentSpacing.form.sectionGap,
  gap: componentSpacing.form.fieldGap,
  p: componentSpacing.card.padding 
}}>
<Button sx={{ mr: componentSpacing.button.iconGap }}>
<Card sx={{ p: componentSpacing.card.padding }}>
```

### Best Practices

1. **Use semantic names**: `componentSpacing.form.fieldGap` instead of `spacing.xl`
2. **Consider component context**: Different spacing for forms vs navigation
3. **Think responsive**: Use `responsiveSpacing` for automatic breakpoint handling
4. **Be consistent**: Stick to the predefined values instead of custom spacing

### Available Spacing Categories

- **form**: Field gaps, section spacing, label margins
- **card**: Padding variants, element gaps
- **button**: Icon gaps, group spacing, padding sizes
- **navigation**: Item gaps, padding, mobile considerations
- **layout**: Section gaps, container padding, layout dimensions
- **modal**: Content padding, header/footer spacing
- **input**: Height constants, padding, border radius
- **alert**: Padding, icon gaps, title margins

For complete documentation, see `src/design_system/spacing.ts` 